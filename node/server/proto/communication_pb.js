"use strict";
// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file proto/communication.proto (package generic, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataResponse = exports.DataRequest = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message generic.DataRequest
 */
class DataRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string input = 1;
         */
        this.input = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DataRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DataRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DataRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DataRequest, a, b);
    }
}
exports.DataRequest = DataRequest;
DataRequest.runtime = protobuf_1.proto3;
DataRequest.typeName = "generic.DataRequest";
DataRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "input", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message generic.DataResponse
 */
class DataResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int32 output = 1;
         */
        this.output = 0;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DataResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DataResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DataResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DataResponse, a, b);
    }
}
exports.DataResponse = DataResponse;
DataResponse.runtime = protobuf_1.proto3;
DataResponse.typeName = "generic.DataResponse";
DataResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "output", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
]);
